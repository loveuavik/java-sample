pipeline {
    agent any
	  environment {
		ARTIFACTID = readMavenPom().getArtifactId()
		VERSION = readMavenPom().getVersion()
		GROUPID = readMavenPom().getGroupId()
		}
    stages {
        stage('Build') {
            steps {
                sh label: '', script: 'mvn package'
            }
        }
        stage("SonarQube analysis") {
            agent any
            steps {
              withSonarQubeEnv('sonar') {
                script {
                sh 'mvn clean package sonar:sonar -Dsonar.host.url=http://${sonarurl}:9000'
              }
             }
            }
          }
          stage("Quality Gate") {
            steps {			  
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
        stage('Deploy to Repo') {
            steps {
                sh label: '', script: 'mvn clean deploy'
            }
        }
		stage('Invoking Deployment Java Pipeline Job') {
			steps {
            build job: 'deployment-java', parameters: [[string(name: 'ARTIFACTID', value: "${ARTIFACTID}")], [string(name: 'GROUPID', value: "${GROUPID}")], [string(name: 'VERSION', value: "${VERSION}")]]
            }
        }
    }
}
