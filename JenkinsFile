pipeline {
    agent any	
    stages {
        stage('Build') {
            steps {
                sh label: '', script: 'mvn package'
            }
        }
        stage("SonarQube analysis") {
            agent any
            steps {
              withSonarQubeEnv('sonar') {
                sh 'mvn clean package sonar:sonar -Dsonar.host.url=http://${sonarurl}:9000'
              }
            }
          }
          stage("Quality Gate") {
            steps {
             script { def sonarurl= sh(returnStdout: true, script: 'echo ${BUILD_URL/https:\\/\\/} | cut -d "/" -f1').trim()
					  println("Hostname : ${sonarurl}") }
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
        stage('Deploy') {
            steps {
                sh label: '', script: 'mvn clean deploy'
            }
        }
    }
}
